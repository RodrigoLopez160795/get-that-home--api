test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Use bin/rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
# amazon:
#   service: S3
#   access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>
#   secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>
#   region: us-east-1
#   bucket: your_own_bucket-<%= Rails.env %>

<%= puts ENV['GCS_PRIVATE_KEY'] %>
#Remember not to checkin your GCS keyfile to a repository
google:
  service: GCS
  project: Pysa
  credentials:
    type: "service_account"
    project_id: <%= Rails.application.credentials.dig(:gcskey, :project_id) %>
    private_key_id: <%= Rails.application.credentials.dig(:gcskey, :private_key_id) %>
    private_key: <%= ENV['GCS_PRIVATE_KEY'].dump %>
    client_email: <%= Rails.application.credentials.dig(:gcskey, :client_email) %>
    client_id: <%= Rails.application.credentials.dig(:gcskey, :client_id) %>
    auth_uri: <%= Rails.application.credentials.dig(:gcskey, :auth_uri) %>
    token_uri: <%= Rails.application.credentials.dig(:gcskey, :token_uri) %>
    auth_provider_x509_cert_url: <%= Rails.application.credentials.dig(:gcskey, :auth_provider_x509_cert_url) %>
    client_x509_cert_url: <%= Rails.application.credentials.dig(:gcskey, :client_x509_cert_url) %>
  bucket: get-that-home
  public: true

# Use bin/rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name-<%= Rails.env %>

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
